{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-panel/admin-panel.component.html","webpack:///src/app/admin-panel/admin-panel.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cinema/cinema-proper.component.ts","webpack:///src/app/cinema/cinema-proper.component.html","webpack:///src/app/cinema/cinema.component.ts","webpack:///src/app/cinema/cinema.component.html","webpack:///src/app/movies/movie-detail.component.ts","webpack:///src/app/movies/movie-detail.component.html","webpack:///src/app/movies/movies.component.ts","webpack:///src/app/movies/movies.component.html","webpack:///src/app/movies/movies.service.ts","webpack:///src/app/movies/movies.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminPanelComponent","http","movieService","ADD_url","GETALL_url","DEL_url","MOD_url","movie","display","loaded","expanded","expandedId","editing","displaingElement","addingElement","removingElement","errorMessage","post","toPromise","data","console","log","JSON","stringify","json","onDisplay","delay","onLoad","getMovies","subscribe","next","movies","error","err","ms","setTimeout","displayDisplaingElement","displayAddingElement","displayRemovingElement","selector","templateUrl","styleUrls","AppComponent","title","AppModule","forRoot","path","component","redirectTo","pathMatch","declarations","imports","bootstrap","CinemaProperComponent","CinemaComponent","MovieDetailComponent","route","router","param","snapshot","paramMap","get","getMovie","navigate","MoviesComponent","changeText","hover","providers","MovieService","moviesUrl","movieUrl","pipe","handleError","ErrorEvent","message","status","providedIn","Movie","WelcomeComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"panel-component\">\n    \n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Display list of movies</h3>\n            <button class=\"unfold-button\" (click)=\"displayDisplaingElement()\"> &#10534; </button>\n        </div>\n        <div class=\"panel-element-header\" *ngIf=\"displaingElement\">\n            <button class=\"action-button\" (click)=\"onLoad()\">Load Movies from Server</button>\n            <button class=\"action-button\" (click)=\"onDisplay()\">Display Movies from Server</button>\n        </div>\n        <div *ngIf=\"displaingElement\">\n        <div *ngIf='display' class=\"panel-element-detail\" >\n            <div class=\"panel-element-detail-header\">\n                <h4>Movie List:</h4>\n            </div>\n            <p *ngIf='!loaded'>No movies are loaded</p>\n            <div *ngIf='loaded'>\n                <table class=\"table\"  >\n                    <tr class=\"table-header\">\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Genre</th>\n                        <th>Length</th>\n                        <th>Release Date</th>\n                        <th>Director</th>\n                        <th style=\"min-width: 2%; max-width: 2%;\"></th>\n                        <th style=\"min-width: 2%; max-width: 2%;\"></th>\n                    </tr>\n                    <tbody *ngFor='let m of movies'>\n                    <tr class=\"table-element\">\n                        <td *ngIf=\"!expanded && expandedId==0\" rowspan=\"1\" class=\"table-element-id\">{{m.id}}</td> \n                        <td *ngIf=\"!expanded && expandedId==m.id\" rowspan=\"1\" class=\"table-element-id\">{{m.id}}</td> \n                        <td *ngIf=\"expanded && expandedId==m.id\" rowspan=\"3\" class=\"table-element-id\">{{m.id}}</td>\n                        <td *ngIf=\"expanded && expandedId!=m.id\" rowspan=\"3\" class=\"table-element-id\">{{m.id}}</td> \n                        <td class=\"table-element\">{{m.title}}</td> \n                        <td class=\"table-element\">{{m.movieGenre}}</td> \n                        <td class=\"table-element\">{{m.length}}</td> \n                        <td class=\"table-element\">{{m.releaseDate}}</td>\n                        <td class=\"table-element\">{{m.director}}</td> \n                        <td rowspan=\"3\" class=\"table-element-del\"><button (click)=deleteRow(m.id)>x</button></td>            \n                        <td rowspan=\"3\" class=\"table-element-del\"><button (click)=expandRow(m.id)>E</button></td>\n                    </tr>\n                    <tr *ngIf=\"expanded && m.id==expandedId\" class=\"table-header\">\n                        <th colspan=\"1\">Description</th>\n                        <th colspan=\"2\">Poster src.</th>\n                        <th colspan=\"2\">Others</th> \n                    </tr>\n                    <tr *ngIf=\"expanded && m.id==expandedId\">\n                        <td colspan=\"1\" class=\"table-element\">{{m.posterSrc}}</td>\n                        <td colspan=\"2\" class=\"table-element\">{{m.description}}</td>\n                        <td colspan=\"2\" class=\"table-element\">{{m.others}}</td>\n                    </tr>\n                    <br>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </div>\n    </div>\n\n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Add</h3>\n            <button class=\"unfold-button\" (click)=\"displayAddingElement()\"> &#10534; </button>\n        </div>\n        <div class=\"panel-element-detail\" *ngIf=\"addingElement\">\n            <div class=\"panel-element-detail-header\">\n                <h4>New movie:</h4>\n            </div>\n            <table class=\"table\">\n                <tr class=\"table-header\">\n                        <th>Title</th> <th>Genre</th> <th>Length</th> <th>Director</th> <th>Poster src.</th>\n                </tr>\n                <tr>\n                    <td class=\"table-element-title\">\n                        <input type=\"text\" name=\"title\" [(ngModel)]=\"movie.title\" placeholder=\"title\">\n                    </td>\n                    <td class=\"table-element-movieGenre\">\n                        <input type=\"text\" name=\"movieGenre\" [(ngModel)]=\"movie.movieGenre\" placeholder=\"movieGenre\">\n                    </td>\n                    <td class=\"table-element-length\">\n                        <input type=\"text\" name=\"length\" [(ngModel)]=\"movie.length\" placeholder=\"length\">\n                    </td>\n                    <td class=\"table-element-director\">\n                        <input type=\"text\" name=\"director\" [(ngModel)]=\"movie.director\" placeholder=\"director\">\n                    </td>\n                    <td class=\"table-element-posterSrc\">\n                        <input type=\"text\" name=\"posterSrc\" [(ngModel)]=\"movie.posterSrc\" placeholder=\"posterSrc\">\n                    </td>                    \n                </tr>\n            </table>\n            <table class=\"table\">\n                <tr class=\"table-header\">\n                    <th>description</th> <th>Release Date</th> <th>others</th> \n                 </tr>\n                <tr>\n                    <td class=\"table-element-description\">\n                        <input type=\"text\" name=\"description\" [(ngModel)]=\"movie.description\" placeholder=\"description\">\n                    </td>\n                    <td class=\"table-element-releaseDate\">\n                        <input type=\"date\" name=\"releaseDate\" [(ngModel)]=\"movie.releaseDate\" placeholder=\"releaseDate\">\n                    </td>\n                    <td class=\"table-element-others\">\n                        <input type=\"text\" name=\"others\" [(ngModel)]=\"movie.others\" placeholder=\"others\">\n                    </td>                 \n                </tr>\n            </table>\n            <table class=\"table\">\n                    <tr>\n                    <td class=\"table-element-send\">\n                        <button class=\"action-button\" class=\"submit\" (click)=\"submit(movie)\">Send</button>\n                    </td>\n                </tr>\n            </table> \n        </div>\n    </div>\n\n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Remove or Modify</h3>\n            <button class=\"unfold-button\" (click)=\"displayRemovingElement()\" >&#10534;</button>\n        </div>\n        <div class=\"panel-element-header\" *ngIf=\"removingElement\">\n            <button class=\"action-button\" (click)=\"onLoad()\">Load Movies from Server</button>\n        </div>\n        <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n            <p *ngIf='!loaded'>No movies are loaded</p>\n            <select class=\"selector\" [(ngModel)]=\"selected\" *ngIf=\"loaded\">\n                <option *ngFor=\"let movie of movies\" [ngValue]=\"movie\"> \n                {{movie.title}}\n                </option>\n            </select>\n            <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid red\" (click)=delete(selected?.id)>Delete</button>\n            <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid yellow\" (click)=edit()>Modify</button>\n            <div *ngIf=\"selected && !editing\">\n                <div class=\"panel-element-detail-header\">\n                    <h4>Selected movie:</h4>\n                </div>\n                <table class=\"table\" >\n                    <tr class=\"table-header\">\n                            <th>Title</th> <th>Genre</th> <th>Director</th> <th>Release Date</th>\n                    </tr>\n                    <tr>\n                        <td class=\"table-element-title\" style=\"width: 40%;\">\n                            {{selected?.title}}\n                        </td>\n                        <td class=\"table-element-movieGenre\" style=\"width: 20%;\">\n                            {{selected?.movieGenre}}\n                        </td>\n                        <td class=\"table-element-director\" style=\"width: 20%;\">\n                            {{selected?.director}}\n                        </td>\n                        <td class=\"table-element-director\" style=\"width: 20%;\">\n                            {{selected?.releaseDate}}\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        <div>\n        <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n            <div *ngIf=\"editing\">\n                <div class=\"panel-element-detail-header\">\n                    <h4>Modify movie:</h4>\n                </div>\n                <table class=\"table\">\n                    <tr class=\"table-header\">\n                            <th>Title</th> <th>Genre</th> <th>Length</th> <th>Director</th> <th>Poster src.</th>\n                    </tr>\n                    <tr>\n                        <td class=\"table-element-title\">\n                            <input type=\"text\" name=\"title\" [(ngModel)]=\"selected.title\" placeholder=\"title\">\n                        </td>\n                        <td class=\"table-element-movieGenre\">\n                            <input type=\"text\" name=\"movieGenre\" [(ngModel)]=\"selected.movieGenre\" placeholder=\"movieGenre\">\n                        </td>\n                        <td class=\"table-element-length\">\n                            <input type=\"text\" name=\"length\" [(ngModel)]=\"selected.length\" placeholder=\"length\">\n                        </td>\n                        <td class=\"table-element-director\">\n                            <input type=\"text\" name=\"director\" [(ngModel)]=\"selected.director\" placeholder=\"director\">\n                        </td>\n                        <td class=\"table-element-posterSrc\">\n                            <input type=\"text\" name=\"posterSrc\" [(ngModel)]=\"selected.posterSrc\" placeholder=\"posterSrc\">\n                        </td>                    \n                    </tr>\n                </table>\n                <table class=\"table\">\n                    <tr class=\"table-header\">\n                        <th>description</th> <th>Release Date</th> <th>others</th> \n                        </tr>\n                    <tr>\n                        <td class=\"table-element-description\">\n                            <input type=\"text\" name=\"description\" [(ngModel)]=\"selected.description\" placeholder=\"description\">\n                        </td>\n                        <td class=\"table-element-releaseDate\">\n                            <input type=\"date\" name=\"releaseDate\" [(ngModel)]=\"selected.releaseDate\" placeholder=\"releaseDate\">\n                        </td>\n                        <td class=\"table-element-others\">\n                            <input type=\"text\" name=\"others\" [(ngModel)]=\"selected.others\" placeholder=\"others\">\n                        </td>                 \n                    </tr>\n                </table>\n                <table class=\"table\">\n                        <tr>\n                        <td class=\"table-element-send\">\n                            <button class=\"action-button\" class=\"submit\" (click)=\"modify(movie)\">Modify</button>\n                        </td>\n                    </tr>\n                </table> \n            </div>\n        </div>\n    </div>\n\n    <div class=\"\">\n\n    </div>\n\n    <div class=\"\">\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { IMovie, Movie} from '../movies/movies';\nimport { MovieService } from '../movies/movies.service';\n\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n  ADD_url = 'http://localhost:8080/movie/add';\n  GETALL_url = 'http://localhost:8080/movie/getAll';\n  DEL_url = 'http://localhost:8080/movie/delete/';\n  MOD_url = 'http://localhost:8080/movie/update';\n\n  movies: IMovie[];\n  movie: Movie=new Movie();\n\n  display: boolean = false;\n  loaded: boolean = false;\n  expanded: boolean = false;\n  expandedId: number=0;\n\n  selected: any;\n  editing: boolean = false;\n\n  displaingElement: boolean = false;\n  addingElement: boolean = false;\n  removingElement: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private movieService: MovieService,\n  ){}\n\n  displayDisplaingElement(){this.displaingElement=!this.displaingElement;}\n  displayAddingElement(){this.addingElement=!this.addingElement;}\n  displayRemovingElement(){this.removingElement=!this.removingElement;}\n\n  async submit(movie){\n    this.http.post(this.ADD_url, movie).toPromise()\n    .then((data:any) => { \n      console.log(data);\n      console.log(JSON.stringify(data.json));\n    });\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n  \n  id: number;\n\n  async delete(id){\n    this.http.delete(this.DEL_url+id).toPromise()\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n   async deleteRow(id){\n    this.http.delete(this.DEL_url+id).toPromise()\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n  async modify(movie){\n    this.http.post(this.MOD_url, movie).toPromise()\n    .then((data:any) => { \n      console.log(data);\n      console.log(JSON.stringify(data.json));\n    });\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n   edit(){\n    this.editing = true;\n   }\n\n  expandRow(id){\n    if(this.expandedId==0){\n      this.expandedId = id;\n      this.expanded = !this.expanded;\n      return;\n    } \n    if(this.expandedId==id){\n      this.expanded = !this.expanded;\n      this.expandedId = 0;\n      return;\n    }\n    this.expandedId = id;\n    console.log(\"jd\");\n  }\n\n  onDisplay(){\n    this.display=!this.display;\n  }\n\n  onLoad(){\n    this.movieService.getMovies().subscribe({\n      next: movies =>{ \n        this.movies=movies;\n      },\n      error: err =>this.errorMessage = err\n    });\n    this.loaded=true;\n  }\n  \n\n  private errorMessage=\"/movie/getAll is unavailable\"\n\n\n  ngOnInit(): void {\n\n  }\n\n  delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n  }\n\n\n}\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cinema';\n}\n","<!DOCTYPE html>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router' ;\nimport { HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { CinemaComponent } from './cinema/cinema.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { MovieDetailComponent } from './movies/movie-detail.component';\nimport { CinemaProperComponent } from './cinema/cinema-proper.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    CinemaComponent,\n    MoviesComponent,\n    AdminPanelComponent,\n    MovieDetailComponent,\n    CinemaProperComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: 'welcome', component: WelcomeComponent},\n      {path: 'admin', component: AdminPanelComponent},\n      {path: 'panel', component: AdminPanelComponent},\n      {path: 'kino', component: CinemaComponent},\n      {path: 'movie/:id', component: MovieDetailComponent},\n      {path: '', redirectTo: 'welcome', pathMatch: 'full'},\n      {path: '**', redirectTo: 'welcome', pathMatch: 'full'}\n    ]),\n    FormsModule,\n    MatSelectModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cinema-proper',\n  templateUrl: './cinema-proper.component.html',\n  styleUrls: ['./cinema-proper.component.css']\n})\nexport class CinemaProperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n    <div class=\"logo\">\n        <img src=\"assets/img/cebulak.png\">\n    </div>\n    \n    <div class=\"titleBar\">\n    <header><h1>Cinema Name</h1></header>\n    </div>\n    \n    <nav class=\"navigationMenu\">\n        <ul>\n            <a>START</a>\n            <a>ELEM2</a>\n            <a>ELEM3</a>\n            <a>ELEM4</a>\n            <a>ELEM5</a>\n            <a>ELEM6</a>\n            </ul>\n    </nav>\n    </body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './cinema.component.html',\n})\nexport class CinemaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-cinema-proper></app-cinema-proper>\n<app-movies></app-movies>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IMovie } from './movies'\nimport { MovieService } from './movies.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\nexport class MovieDetailComponent implements OnInit {\n  errorMessage: string;\n\n  movie: IMovie;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private movieService: MovieService) { }\n\n   ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');{\n      if(param!=null){ const id =+param;\n      this.getMovie(id);\n      }else console.log('no route id');\n    }\n  }\n\n  getMovie(id: number) {\n    this.movieService.getMovie(id).subscribe({\n      next: movie => this.movie = movie,\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void{\n    this.router.navigate(['/kino']);\n  }\n\n}\n","<app-cinema-proper></app-cinema-proper>\n<div class=\"md-component\">\n    \n    <div class=\"md-box\" *ngIf='movie'>\n        <div class=\"md-detail\">\n            <div class=\"md-de-movie-bar\">\n                <h2>{{movie.title}}</h2>     \n            </div>\n            <div class=\"md-de-genres\">\n                <p>{{movie.movieGenre}}</p>\n            </div>\n            <div class=\"md-de-description\">                \n                <p>decription: {{movie.description}}</p>\n            </div>\n            <div class=\"md-de-reservation\">\n                <button class=\"button\" style=\"direction: rtl; float: right;\">\n                    <i>Make a reservation</i>\n                </button>\n            </div>\n        </div>\n        <div class=\"md-side-panel\">\n            <div class=\"md-sp-rating\">\n                <div>\n                    <div class=\"md-sp-rating-rating\">\n                        <p class=\"md-sp-rating-value\">{{movie.id}}/100</p>\n                    </div>\n                </div>\n                <p class=\"md-sp-rating-head\">user rating</p>\n            </div>\n            <div class=\"md-sp-poster\">\n                <img src=\"assets/img/poster.png\">\n            </div>\n            <div class=\"md-sp-list\">\n                <h4>Direction</h4>\n                    <p>{{movie.director}}</p>\n                <h4>Release date</h4>\n                    <p>#BLANK#</p>\n                <h4>Runtime</h4>\n                    <p>{{movie.length}} min</p>\n                <h4>Rating</h4>\n                    <p>#BLANK#</p>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { IMovie } from './movies'\nimport { MovieService } from './movies.service';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css'],\n  providers: [MovieService]\n})\nexport class MoviesComponent implements OnInit {\n  errorMessage: string;\n\n  changeText: boolean;\n  hover:boolean;\n  id:number;\n  constructor(private movieService: MovieService) {\n    this.changeText = false;\n    this.hover = false;\n  }\n\n   movies: IMovie[]=[];\n\n  ngOnInit(): void {\n    this.movieService.getMovies().subscribe({\n      next: movies =>{ \n        this.movies=movies;\n      },\n      error: err =>this.errorMessage = err\n    });\n  }\n\n\n}\n","<div class=\"movies-component\">\n    <div class=\"movie-box\" *ngFor='let movie of movies'>\n        <div class=\"box-insides\">\n            <div class=\"movie-poster\">\n                <img src=\"assets/img/poster.png\">\n                <div (mouseover)=\"changeText=true && id=movie.id\" (mouseleave)=\"changeText=false\" class=\"movie-detail\">\n                    <p \n                    class=\"movie-detail-length\" \n                    *ngIf=\"changeText&& movie.id==id\" \n                    [ngStyle]=\"{background: 'white' }\">\n                        {{movie.length}} min\n                    </p>\n                    <hr class=\"movie-detail-line\" *ngIf=\"changeText&& movie.id==id\">\n                    <p \n                    class=\"movie-detail-director\" \n                    *ngIf=\"changeText&& movie.id==id\" \n                    [ngStyle]=\"{background: 'white' }\">\n                        {{movie.director}}\n                    </p>\n                    <p class=\"movie-detail-link-text\" style=\"background-color: unset;\">\n                        <a\n                        (mouseover)=\"hover=true \"\n                        (mouseleave)=\"hover=false\"\n                        *ngIf=\"changeText && movie.id==id\" \n                        [routerLink]=\"['/movie',movie.id]\" \n                        class=\"movie-detail-link-text\" \n                        [ngStyle]=\"{color: hover==true  ? 'white' : 'rgb(169, 169, 169)' }\"\n                        style=\"opacity: 1;\">\n                            <p \n                            class=\"movie-detail-details-message-box\" \n                            style=\"background-color: rgb(73, 35, 8);\">\n                                details...\n                            </p>\n                        </a>\n                    </p>\n                </div>\n            </div>\n            <div>\n                <a class=\"movie-link\" [routerLink]=\"['/movie',movie.id]\">\n                    <h2 class=\"movie-title\">{{movie.title}}</h2>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { IMovie } from './movies';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n\r\n})\r\n\r\nexport class MovieService {\r\n  private moviesUrl='http://localhost:8080/movie/getAll';\r\n  private movieUrl='http://localhost:8080/movie/get/';\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n    getMovies(): Observable<IMovie[]> {\r\n        return  this.http.get<IMovie[]>(this.moviesUrl)\r\n        .pipe(\r\n            tap(data =>console.log('Wszystko: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)  \r\n            );      \r\n    }\r\n\r\n    getMovie(id: number): Observable<IMovie> {\r\n      return  this.http.get<IMovie>(this.movieUrl+id)\r\n      .pipe(\r\n          tap(data =>console.log('jeden: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)  \r\n          );      \r\n    }\r\n    \r\n    private handleError(err: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n      } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n      }\r\n      console.error(errorMessage);\r\n      return throwError(errorMessage);\r\n    }\r\n}\r\n\r\n","export interface IMovie {\r\n        id: number;\r\n        movieGenre: string;\r\n        length: string;\r\n        director: string;\r\n        title: string;\r\n        description: string;\r\n        releaseDate: Date;\r\n        others: string;\r\n        posterSrc: string;\r\n}\r\n\r\nexport class Movie{\r\n        movieGenre: string;\r\n        length: string;\r\n        director: string;\r\n        title: string;\r\n        description: string;\r\n        releaseDate: Date;\r\n        others: string;\r\n        posterSrc: string;\r\n\r\n        public Movie(){}\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.navigate(['/welcome'])\n  }\n\n}\n","<h1>welcome works!!!!!!!!!!!!!</h1>\n\n<a [routerLink]=\"['/kino']\">\n    nazwa kina\n</a>\n<br>\n<a [routerLink]=\"['/admin']\">\n    panel administracyjny\n</a>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}