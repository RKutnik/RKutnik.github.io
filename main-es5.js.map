{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin.module/admin.module.ts","webpack:///src/app/admin.module/cinema-panel/cinema-panel-service.ts","webpack:///src/app/admin.module/cinema-panel/cinema-panel.component.html","webpack:///src/app/admin.module/cinema-panel/cinema-panel.component.ts","webpack:///src/app/admin.module/message.service.ts","webpack:///src/app/admin.module/movie-panel/movie-panel.component.html","webpack:///src/app/admin.module/movie-panel/movie-panel.component.ts","webpack:///src/app/admin.module/movie-panel/movie-panel.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cinemas.ts","webpack:///src/app/client.module/cinema/cinema-proper.component.ts","webpack:///src/app/client.module/cinema/cinema-proper.component.html","webpack:///src/app/client.module/cinema/cinema.component.ts","webpack:///src/app/client.module/cinema/cinema.component.html","webpack:///src/app/client.module/client.module.ts","webpack:///src/app/client.module/movies/movie-detail.component.ts","webpack:///src/app/client.module/movies/movie-detail.component.html","webpack:///src/app/client.module/movies/movies.component.ts","webpack:///src/app/client.module/movies/movies.component.html","webpack:///src/app/client.module/movies/movies.service.ts","webpack:///src/app/movies.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminModule","forChild","path","component","declarations","imports","CinemaService","http","messageService","moviesUrl","movieUrl","MOD_url","ADD_url","DEL_url","date","Date","errorMessage","get","pipe","handleError","cinema","post","subscribe","res","console","log","err","add","toLocaleTimeString","error","status","put","ErrorEvent","message","providedIn","CinemaPanelComponent","cinemaService","titleService","display","loaded","editing","displaingElement","addingElement","removingElement","setTitle","scrollToBottom","messages","postCinema","ifError","onDisplay","delay","onLoad","deleteCinema","modifyCinema","getCinemas","next","cinemas","ms","setTimeout","myScrollContainer","nativeElement","scrollTop","scrollHeight","displayDisplaingElement","displayAddingElement","displayRemovingElement","selector","templateUrl","styleUrls","MessageService","messaged","push","MoviePanelComponent","movieService","GETALL_url","movie","expanded","expandedId","postMovie","deleteMovie","JSON","stringify","modifyMovie","getMovies","movies","PanelService","AppComponent","title","AppModule","forRoot","redirectTo","pathMatch","bootstrap","Cinema","CinemaProperComponent","CinemaComponent","ClientModule","MovieDetailComponent","route","router","param","snapshot","paramMap","getMovie","navigate","MoviesComponent","changeText","hover","providers","MovieService","data","Movie","WelcomeComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule} from '@angular/router' ;\nimport { FormsModule } from '@angular/forms';\n\nimport { MoviePanelComponent } from './movie-panel/movie-panel.component';\nimport { CinemaPanelComponent } from './cinema-panel/cinema-panel.component';\n\n@NgModule({\n  declarations: [\n    MoviePanelComponent,\n    CinemaPanelComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path: 'panel/movie', component: MoviePanelComponent},\n      {path: 'admin/movie', component: MoviePanelComponent},\n      {path: 'panel/cinema', component: CinemaPanelComponent},\n      {path: 'admin/cinema', component: CinemaPanelComponent},\n    ])\n  ]\n})\nexport class AdminModule{ }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, from } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../../admin.module/message.service';\r\nimport { ICinema, Cinema } from '../../cinemas';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CinemaService {\r\n  private moviesUrl='http://localhost:8080/cinema/getAll';\r\n  private movieUrl='http://localhost:8080/cinema/get/';\r\n  private MOD_url = 'http://localhost:8080/cinema/update';\r\n  private ADD_url = 'http://localhost:8080/cinema/add';\r\n  private DEL_url = 'http://localhost:8080/cinema/delete/';\r\n\r\n  date = new Date();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n    ) {}\r\n\r\n    getCinemas(): Observable<ICinema[]> {\r\n        return  this.http.get<ICinema[]>(this.moviesUrl)\r\n        .pipe(\r\n            catchError(this.handleError)  \r\n            );      \r\n    }\r\n\r\n    getCinema(id: number): Observable<ICinema> {\r\n      return  this.http.get<ICinema>(this.movieUrl+id)\r\n      .pipe(\r\n          catchError(this.handleError)  \r\n          );      \r\n    }\r\n\r\n    postCinema(cinema){\r\n      return this.http.post(this.ADD_url, cinema).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      );\r\n    }\r\n\r\n    deleteCinema(id){\r\n      return this.http.delete(this.DEL_url+id).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      );\r\n    }\r\n\r\n    modifyCinema(cinema){\r\n      return this.http.put(this.MOD_url, cinema).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      )\r\n    }\r\n\r\n    errorMessage=\"An Error occured, try again\";\r\n\r\n    public handleError(err: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (err.error instanceof ErrorEvent) {\r\n        errorMessage = `CPS An error occurred: ${err.error.message}`;\r\n        this.messageService.add(`CPS An error occurred: ${err.error.message}`);\r\n      } else {\r\n        errorMessage = `CPS Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        this.messageService.add(`CPS Server returned code: ${err.status}, error message is: ${err.message}`);\r\n      }\r\n      this.errorMessage=errorMessage;\r\n      console.error(errorMessage);\r\n      return throwError(errorMessage);\r\n    }\r\n\r\n}        ","<span *ngIf=\"error\">\n<div #scroll class=\"t-s\" >\n    <p class=\"message\" *ngFor='let message of messageService.messages'>  {{message}} </p>\n</div>\n</span>\n<div class=\"panel-component\">\n    <div class=\"l-s\">    \n        <div class=\"panel-element\">\n            <div class=\"panel-element-header\">\n                <h3>Display list of cinemas</h3>\n                <button class=\"unfold-button\" (click)=\"displayDisplaingElement()\"> &#10534; </button>\n            </div>\n            <div class=\"panel-element-header\" *ngIf=\"displaingElement\">\n                <button class=\"action-button\" (click)=\"onLoad()\">Load Cinemas from Server</button>\n                <button class=\"action-button\" (click)=\"onDisplay()\">Display Ciemas from Server</button>\n            </div>\n            <div *ngIf=\"displaingElement\">\n            <div *ngIf='display' class=\"panel-element-detail\" >\n                <div class=\"panel-element-detail-header\">\n                    <h4>Cinema List:</h4>\n                </div>\n                <p *ngIf='!loaded'>No cinemas are loaded</p>\n                <div *ngIf='loaded'>\n                    <table class=\"table\"  >\n                        <tr class=\"table-header\">\n                            <th>ID</th>\n                            <th>Department</th>\n                            <th style=\"min-width: 2%; max-width: 2%;\"></th>\n                        </tr>\n                        <tbody *ngFor='let c of cinemas' class=\"table-row\">\n                        <tr class=\"table-element\">\n                            <td class=\"table-element-id\">{{c.id}}</td> \n                            <td class=\"table-element-department\">{{c.department}}</td> \n                            <td class=\"table-element-del\"> <button (click)=delete(c.id)> x</button></td> \n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"r-s\">\n        <div class=\"panel-element\">\n            <div class=\"panel-element-header\">\n                <h3>Add</h3>\n                <button class=\"unfold-button\" (click)=\"displayAddingElement()\"> &#10534; </button>\n            </div>\n            <div class=\"panel-element-detail\" *ngIf=\"addingElement\">\n                <div class=\"panel-element-detail-header\">\n                    <h4>New Cinema:</h4>\n                </div>\n                <table class=\"table\">\n                    <tr class=\"table-header\">\n                            <th>Department</th>\n                    </tr>\n                    <tr>\n                        <td class=\"table-element-department\">\n                            <input type=\"text\" name=\"department\" [(ngModel)]=\"cinema.department\" placeholder=\"department\">\n                        </td>\n                    </tr>\n                </table>\n                <table class=\"table\">\n                    <tr>\n                        <td class=\"table-element-send\">\n                            <button class=\"action-button\" class=\"submit\" (click)=\"submit(cinema)\">Send</button>\n                        </td>\n                    </tr>\n                </table> \n            </div>\n        </div>\n\n        <div class=\"panel-element\">\n            <div class=\"panel-element-header\">\n                <h3>Remove or Modify</h3>\n                <button class=\"unfold-button\" (click)=\"displayRemovingElement()\" >&#10534;</button>\n            </div>\n            <div class=\"panel-element-header\" *ngIf=\"removingElement\">\n                <button class=\"action-button\" (click)=\"onLoad()\">Load Cinemas from Server</button>\n            </div>\n            <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n                <p *ngIf='!loaded'>No cinemas are loaded</p>\n                <select class=\"selector\" [(ngModel)]=\"selected\" *ngIf=\"loaded\">\n                    <option *ngFor=\"let cinema of cinemas\" [ngValue]=\"cinema\"> \n                    {{cinema.id}} | {{cinema.department}}\n                    </option>\n                </select>\n                <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid red\" (click)=delete(selected?.id)>Delete</button>\n                <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid yellow\" (click)=edit()>Modify</button>\n                <div *ngIf=\"selected && !editing\">\n                    <div class=\"panel-element-detail-header\">\n                        <h4>Selected cinema:</h4>\n                    </div>\n                    <table class=\"table\" >\n                        <tr class=\"table-header\">\n                            <th>ID</th> <th>Department</th>\n                        </tr>\n                        <tr>\n                            <td class=\"table-element-id\">\n                                {{selected?.id}}\n                            </td>\n                            <td class=\"table-element-department\">\n                                {{selected?.department}}\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            <div>\n\n            <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n                <div *ngIf=\"editing\">\n                    <div class=\"panel-element-detail-header\">\n                        <h4>Modify cinema:</h4>\n                    </div>\n                    <table class=\"table\">\n                        <tr class=\"table-header\">\n                                <th>ID</th> <th>Department</th>\n                        </tr>\n                        <tr>\n                            <td class=\"table-element-id\">\n                                {{selected?.id}}\n                            </td>\n                            <td class=\"table-element-department\">\n                                <input type=\"text\" name=\"department\" [(ngModel)]=\"selected.department\" placeholder=\"department\">\n                            </td>\n                        </tr>\n                    </table>\n                    <table class=\"table\">\n                            <tr>\n                            <td class=\"table-element-send\">\n                                <button class=\"action-button\" class=\"submit\" (click)=\"modify(selected)\">Modify</button>\n                            </td>\n                        </tr>\n                    </table> \n                </div>\n            </div>\n        </div>\n    </div>\n        </div>\n    </div>\n    <div style=\"clear: both; width: 100%;\"></div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ICinema, Cinema} from '../../cinemas';\nimport { Title } from \"@angular/platform-browser\";\n\nimport { CinemaService } from './cinema-panel-service';\nimport { catchError, isEmpty } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { logging, error } from 'protractor';\n\nimport { MessageService } from '../../admin.module/message.service';\n\n@Component({\n  selector: 'app-cinema-panel',\n  templateUrl: './cinema-panel.component.html',\n  styleUrls: ['./cinema-panel.component.css']\n})\nexport class CinemaPanelComponent implements OnInit {\n\n  \n\n  cinemas: ICinema[];\n  cinema: Cinema=new Cinema();\n\n  id: number;\n\n  error:boolean=false;\n  display: boolean = false;\n  loaded: boolean = false;\n\n  selected: any;\n  editing: boolean = false;\n\n  displaingElement: boolean = false;\n  addingElement: boolean = false;\n  removingElement: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private cinemaService: CinemaService,\n    private titleService:Title,\n    public messageService: MessageService\n    \n  ){\n    this.titleService.setTitle(\"cinemas\");\n  }\n\n  displayDisplaingElement(){this.displaingElement=!this.displaingElement;}\n  displayAddingElement(){this.addingElement=!this.addingElement;}\n  displayRemovingElement(){this.removingElement=!this.removingElement;}\n\n  ifError(){\n    this.scrollToBottom();\n    if(this.messageService.messages){\n      this.error=true;  \n    } \n  }\n\n  async submit(cinema){\n    this.cinemaService.postCinema(cinema);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n  \n  async delete(id){\n    this.cinemaService.deleteCinema(id);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n  async modify(cinema){\n    this.cinemaService.modifyCinema(cinema);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n   edit(){\n    this.editing = !this.editing;\n   }\n\n  onDisplay(){\n    this.display=!this.display;\n  }\n\n  onLoad(){\n    this.cinemaService.getCinemas()\n    .subscribe({\n      next: cinemas =>{ \n        this.cinemas=cinemas;\n      },      \n    });\n    this.loaded=true;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n  }\n\n  //###Scroling#############################################################################################\n  @ViewChild('scroll') private myScrollContainer: ElementRef;\n\n  ngAfterViewChecked() {        \n      this.scrollToBottom();        \n  } \n\n  scrollToBottom(): void {\n      try {\n          this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n      } catch(err) { }                 \n  }\n\n\n\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n  public messaged:boolean=false;\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n    this.messaged=true;\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n    this.messaged=false;\r\n  }\r\n}","<span *ngIf=\"error\">\n    <div #scroll class=\"t-s\" >\n        <p class=\"pp\" *ngFor='let message of messageService.messages'>  {{message}} </p>\n    </div>\n    </span>\n<div class=\"panel-component\">\n    \n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Display list of movies</h3>\n            <button class=\"unfold-button\" (click)=\"displayDisplaingElement()\"> &#10534; </button>\n        </div>\n        <div class=\"panel-element-header\" *ngIf=\"displaingElement\">\n            <button class=\"action-button\" (click)=\"onLoad()\">Load Movies from Server</button>\n            <button class=\"action-button\" (click)=\"onDisplay()\">Display Movies from Server</button>\n        </div>\n        <div *ngIf=\"displaingElement\">\n        <div *ngIf='display' class=\"panel-element-detail\" >\n            <div class=\"panel-element-detail-header\">\n                <h4>Movie List:</h4>\n            </div>\n            <p *ngIf='!loaded'>No movies are loaded</p>\n            <div *ngIf='loaded'>\n                <table class=\"table\"  >\n                    <tr class=\"table-header\">\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Genre</th>\n                        <th>Length</th>\n                        <th>Release Date</th>\n                        <th>Director</th>\n                        <th style=\"min-width: 2%; max-width: 2%;\"></th>\n                        <th style=\"min-width: 2%; max-width: 2%;\"></th>\n                    </tr>\n                    <tbody *ngFor='let m of movies' class=\"table-row\">\n                    <tr class=\"table-element\">\n                        <td *ngIf=\"!expanded && expandedId==0\" rowspan=\"1\" class=\"table-element-id\">{{m.id}}</td> \n                        <td *ngIf=\"!expanded && expandedId==m.id\" rowspan=\"1\" class=\"table-element-id\">{{m.id}}</td> \n                        <td *ngIf=\"expanded && expandedId==m.id\" rowspan=\"3\" class=\"table-element-id\">{{m.id}}</td>\n                        <td *ngIf=\"expanded && expandedId!=m.id\" rowspan=\"1\" class=\"table-element-id\">{{m.id}}</td> \n                        <td class=\"table-element-title\">{{m.title}}</td> \n                        <td class=\"table-element-genre\">{{m.movieGenre}}</td> \n                        <td class=\"table-element-length\">{{m.length}}</td> \n                        <td class=\"table-element-releaseDate\">{{m.releaseDate}}</td>\n                        <td class=\"table-element-director\">{{m.director}}</td> \n                                    \n                        <td *ngIf=\"!expanded && expandedId==0\" rowspan=\"1\" class=\"table-element-del\"><button (click)=deleteRow(m.id)>x</button></td> \n                        <td *ngIf=\"!expanded && expandedId==m.id\" rowspan=\"1\" class=\"table-element-del\"><button (click)=deleteRow(m.id)>x</button></td> \n                        <td *ngIf=\"expanded && expandedId==m.id\" rowspan=\"3\" class=\"table-element-del\"><button (click)=deleteRow(m.id)>x</button></td>\n                        <td *ngIf=\"expanded && expandedId!=m.id\" rowspan=\"1\" class=\"table-element-del\"><button (click)=deleteRow(m.id)>x</button></td> \n\n                        <td *ngIf=\"!expanded && expandedId==0\" rowspan=\"1\" class=\"table-element-del\">\n                            <button (click)=expandRow(m.id)>\n                                <span *ngIf=\"!expanded\">+</span> <span *ngIf=\"expanded\">–</span>\n                            </button></td> \n                        <td *ngIf=\"!expanded && expandedId==m.id\" rowspan=\"1\" class=\"table-element-del\">\n                            <button (click)=expandRow(m.id)>\n                                <span *ngIf=\"!expanded\">+</span> <span *ngIf=\"expanded\">–</span>\n                            </button></td> \n                        <td *ngIf=\"expanded && expandedId==m.id\" rowspan=\"3\" class=\"table-element-del\">\n                            <button (click)=expandRow(m.id)>\n                                <span *ngIf=\"!expanded\"></span> <span *ngIf=\"expanded\">–</span>\n                            </button></td>\n                        <td *ngIf=\"expanded && expandedId!=m.id\" rowspan=\"1\" class=\"table-element-del\">\n                            <button (click)=expandRow(m.id)>\n                                +\n                            </button></td> \n                    </tr>\n                    <tr *ngIf=\"expanded && m.id==expandedId\" class=\"table-header\">\n                        <th colspan=\"2\">Description</th>\n                        <th colspan=\"2\">Poster src.</th>\n                        <th colspan=\"1\">Others</th> \n                    </tr>\n                    <tr class=\"table-element\" *ngIf=\"expanded && m.id==expandedId\" >\n                        <td colspan=\"2\" class=\"table-element-description\">{{m.description}}</td>\n                        <td colspan=\"2\" class=\"table-element-posterSrc\">{{m.posterSrc}}</td>\n                        <td colspan=\"1\" class=\"table-element-others\">{{m.others}}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </div>\n    </div>\n\n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Add</h3>\n            <button class=\"unfold-button\" (click)=\"displayAddingElement()\"> &#10534; </button>\n        </div>\n        <div class=\"panel-element-detail\" *ngIf=\"addingElement\">\n            <div class=\"panel-element-detail-header\">\n                <h4>New movie:</h4>\n            </div>\n            <table class=\"table\">\n                <tr class=\"table-header\">\n                        <th>Title</th> <th>Genre</th> <th>Length</th> <th>Director</th> <th>Poster src.</th>\n                </tr>\n                <tr>\n                    <td class=\"table-element-title\">\n                        <input type=\"text\" name=\"title\" [(ngModel)]=\"movie.title\" placeholder=\"title\">\n                    </td>\n                    <td class=\"table-element-movieGenre\">\n                        <input type=\"text\" name=\"movieGenre\" [(ngModel)]=\"movie.movieGenre\" placeholder=\"movieGenre\">\n                    </td>\n                    <td class=\"table-element-length\">\n                        <input type=\"text\" name=\"length\" [(ngModel)]=\"movie.length\" placeholder=\"length\">\n                    </td>\n                    <td class=\"table-element-director\">\n                        <input type=\"text\" name=\"director\" [(ngModel)]=\"movie.director\" placeholder=\"director\">\n                    </td>\n                    <td class=\"table-element-posterSrc\">\n                        <input type=\"text\" name=\"posterSrc\" [(ngModel)]=\"movie.posterSrc\" placeholder=\"posterSrc\">\n                    </td>                    \n                </tr>\n            </table>\n            <table class=\"table\">\n                <tr class=\"table-header\">\n                    <th>description</th> <th>Release Date</th> <th>others</th> \n                 </tr>\n                <tr>\n                    <td class=\"table-element-description\">\n                        <input type=\"text\" name=\"description\" [(ngModel)]=\"movie.description\" placeholder=\"description\">\n                    </td>\n                    <td class=\"table-element-releaseDate\">\n                        <input type=\"date\" name=\"releaseDate\" [(ngModel)]=\"movie.releaseDate\" placeholder=\"releaseDate\">\n                    </td>\n                    <td class=\"table-element-others\">\n                        <input type=\"text\" name=\"others\" [(ngModel)]=\"movie.others\" placeholder=\"others\">\n                    </td>                 \n                </tr>\n            </table>\n            <table class=\"table\">\n                    <tr>\n                    <td class=\"table-element-send\">\n                        <button class=\"action-button\" class=\"submit\" (click)=\"submit(movie)\">Send</button>\n                    </td>\n                </tr>\n            </table> \n        </div>\n    </div>\n\n    <div class=\"panel-element\">\n        <div class=\"panel-element-header\">\n            <h3>Remove or Modify</h3>\n            <button class=\"unfold-button\" (click)=\"displayRemovingElement()\" >&#10534;</button>\n        </div>\n        <div class=\"panel-element-header\" *ngIf=\"removingElement\">\n            <button class=\"action-button\" (click)=\"onLoad()\">Load Movies from Server</button>\n        </div>\n        <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n            <p *ngIf='!loaded'>No movies are loaded</p>\n            <select class=\"selector\" [(ngModel)]=\"selected\" *ngIf=\"loaded\">\n                <option *ngFor=\"let movie of movies\" [ngValue]=\"movie\"> \n                {{movie.title}}\n                </option>\n            </select>\n            <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid red\" (click)=delete(selected?.id)>Delete</button>\n            <button *ngIf=\"selected\" class=\"action-button\" style=\"border: 2px solid yellow\" (click)=edit()>Modify</button>\n            <div *ngIf=\"selected && !editing\">\n                <div class=\"panel-element-detail-header\">\n                    <h4>Selected movie:</h4>\n                </div>\n                <table class=\"table\" >\n                    <tr class=\"table-header\">\n                            <th>Title</th> <th>Genre</th> <th>Director</th> <th>Release Date</th>\n                    </tr>\n                    <tr>\n                        <td class=\"table-element-title\" style=\"width: 40%;\">\n                            {{selected?.title}}\n                        </td>\n                        <td class=\"table-element-movieGenre\" style=\"width: 20%;\">\n                            {{selected?.movieGenre}}\n                        </td>\n                        <td class=\"table-element-director\" style=\"width: 20%;\">\n                            {{selected?.director}}\n                        </td>\n                        <td class=\"table-element-director\" style=\"width: 20%;\">\n                            {{selected?.releaseDate}}\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        <div>\n        <div class=\"panel-element-detail\" *ngIf=\"removingElement\">\n            <div *ngIf=\"editing\">\n                <div class=\"panel-element-detail-header\">\n                    <h4>Modify movie:</h4>\n                </div>\n                <table class=\"table\">\n                    <tr class=\"table-header\">\n                            <th>Title</th> <th>Genre</th> <th>Length</th> <th>Director</th> <th>Poster src.</th>\n                    </tr>\n                    <tr>\n                        <td class=\"table-element-title\">\n                            <input type=\"text\" name=\"title\" [(ngModel)]=\"selected.title\" placeholder=\"title\">\n                        </td>\n                        <td class=\"table-element-movieGenre\">\n                            <input type=\"text\" name=\"movieGenre\" [(ngModel)]=\"selected.movieGenre\" placeholder=\"movieGenre\">\n                        </td>\n                        <td class=\"table-element-length\">\n                            <input type=\"text\" name=\"length\" [(ngModel)]=\"selected.length\" placeholder=\"length\">\n                        </td>\n                        <td class=\"table-element-director\">\n                            <input type=\"text\" name=\"director\" [(ngModel)]=\"selected.director\" placeholder=\"director\">\n                        </td>\n                        <td class=\"table-element-posterSrc\">\n                            <input type=\"text\" name=\"posterSrc\" [(ngModel)]=\"selected.posterSrc\" placeholder=\"posterSrc\">\n                        </td>                    \n                    </tr>\n                </table>\n                <table class=\"table\">\n                    <tr class=\"table-header\">\n                        <th>description</th> <th>Release Date</th> <th>others</th> \n                        </tr>\n                    <tr>\n                        <td class=\"table-element-description\">\n                            <input type=\"text\" name=\"description\" [(ngModel)]=\"selected.description\" placeholder=\"description\">\n                        </td>\n                        <td class=\"table-element-releaseDate\">\n                            <input type=\"date\" name=\"releaseDate\" [(ngModel)]=\"selected.releaseDate\" placeholder=\"releaseDate\">\n                        </td>\n                        <td class=\"table-element-others\">\n                            <input type=\"text\" name=\"others\" [(ngModel)]=\"selected.others\" placeholder=\"others\">\n                        </td>\n                            <input hidden type=\"text\" name=\"id\" [(ngModel)]=\"selected.id\" placeholder=\"id\">               \n                    </tr>\n                </table>\n                <table class=\"table\">\n                        <tr>\n                        <td class=\"table-element-send\">\n                            <button class=\"action-button\" class=\"submit\" (click)=\"modify(selected)\">Modify</button>\n                        </td>\n                    </tr>\n                </table> \n            </div>\n        </div>\n    </div>\n\n    <div class=\"\">\n\n    </div>\n\n    <div class=\"\">\n\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { IMovie, Movie} from '../../movies';\nimport { Title } from \"@angular/platform-browser\";\n\nimport { MessageService } from '../../admin.module/message.service';\nimport { PanelService } from './movie-panel.service';\n\n\n@Component({\n  selector: 'app-movie-panel',\n  templateUrl: './movie-panel.component.html',\n  styleUrls: ['./movie-panel.component.css']\n})\nexport class MoviePanelComponent implements OnInit {\n\n  GETALL_url = 'http://localhost:8080/movie/getAll';\n\n  movies: IMovie[];\n  movie: Movie=new Movie();\n\n  error:boolean=false;\n  display: boolean = false;\n  loaded: boolean = false;\n  expanded: boolean = false;\n  expandedId: number=0;\n\n  selected: any;\n  editing: boolean = false;\n\n  displaingElement: boolean = false;\n  addingElement: boolean = false;\n  removingElement: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n    private movieService: PanelService,\n    private titleService:Title,\n    public messageService: MessageService,\n  ){\n    this.titleService.setTitle(\"Movies\")\n  }\n\n  displayDisplaingElement(){this.displaingElement=!this.displaingElement;}\n  displayAddingElement(){this.addingElement=!this.addingElement;}\n  displayRemovingElement(){this.removingElement=!this.removingElement;}\n\n  ifError(){\n    this.scrollToBottom();\n    if(this.messageService.messages){\n      this.error=true;  \n    } \n  }\n\n  async submit(movie){\n    this.movieService.postMovie(movie);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n  \n  id: number;\n\n  async delete(id){\n    this.movieService.deleteMovie(id);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n   async deleteRow(id){\n    this.movieService.deleteMovie(id);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n  async modify(movie){\n    console.log(JSON.stringify(movie));\n    this.movieService.modifyMovie(movie);\n    //--------------------//\n    this.ifError();\n    this.onDisplay();\n    await this.delay(100);\n    this.onLoad();\n    this.onDisplay();\n  }\n\n   edit(){\n    this.editing = !this.editing;\n   }\n\n  expandRow(id){\n    if(this.expandedId==0){\n      this.expandedId = id;\n      this.expanded = !this.expanded;\n      return;\n    } \n    if(this.expandedId==id){\n      this.expanded = !this.expanded;\n      this.expandedId = 0;\n      return;\n    }\n    this.expandedId = id;\n  }\n\n  onDisplay(){\n    this.display=!this.display;\n  }\n\n  onLoad(){\n    this.movieService.getMovies().subscribe({\n      next: movies =>{ \n        this.movies=movies;\n      },\n      error: err =>this.errorMessage = err\n    });\n    this.loaded=true;\n  }\n  \n\n  private errorMessage=\"/movie/getAll is unavailable\"\n\n\n  ngOnInit(): void {\n\n  }\n\n  delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n  }\n\n  //###Scroling#############################################################################################\n  @ViewChild('scroll') private myScrollContainer: ElementRef;\n\n  ngAfterViewChecked() {        \n      this.scrollToBottom();        \n  } \n\n  scrollToBottom(): void {\n      try {\n          this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n      } catch(err) { }                 \n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../../admin.module/message.service';\r\nimport { IMovie } from '../../movies';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PanelService {\r\n  private moviesUrl='http://localhost:8080/movie/getAll';\r\n  private movieUrl='http://localhost:8080/movie/get/';\r\n  private ADD_url = 'http://localhost:8080/movie/add';\r\n  private DEL_url = 'http://localhost:8080/movie/delete/';\r\n  private MOD_url = 'http://localhost:8080/movie/update';\r\n\r\n  date = new Date();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService\r\n    ){}\r\n\r\n    getMovies(): Observable<IMovie[]> {\r\n        return  this.http.get<IMovie[]>(this.moviesUrl)\r\n        .pipe(\r\n            //tap(data =>console.log('Wszystko: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)  \r\n            );      \r\n    }\r\n\r\n    getMovie(id: number): Observable<IMovie> {\r\n      return  this.http.get<IMovie>(this.movieUrl+id)\r\n      .pipe(\r\n          //tap(data =>console.log('jeden: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)  \r\n          );      \r\n    }\r\n\r\n    postMovie(movie){\r\n      return this.http.post(this.ADD_url, movie).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      );\r\n    }\r\n\r\n    deleteMovie(id){\r\n      return this.http.delete(this.DEL_url+id).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      );\r\n    }\r\n\r\n    modifyMovie(movie){\r\n      return this.http.put(this.MOD_url, movie).subscribe(\r\n        res => console.log('HTTP response', res),\r\n        err => { this.date = new Date();this.messageService.add(\" [\"+this.date.toLocaleTimeString()+\"] \"+err.error +\" | error code is: \"+err.status)},\r\n        () => console.log('HTTP request completed.')\r\n      )\r\n    }\r\n    \r\n    private handleError(err: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n      } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n      }\r\n      console.error(errorMessage);\r\n      return throwError(errorMessage);\r\n    }\r\n}\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cinema';\n}\n","<!DOCTYPE html>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router' ;\nimport { HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MovieDetailComponent } from './client.module/movies/movie-detail.component';\nimport { CinemaComponent } from './client.module/cinema/cinema.component';\n\nimport { ClientModule } from './client.module/client.module';\nimport { AdminModule } from './admin.module/admin.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ClientModule,\n    AdminModule,\n    RouterModule.forRoot([\n      {path: 'kino', component: CinemaComponent},\n      {path: 'movie/:id', component: MovieDetailComponent},\n      {path: '', redirectTo: 'welcome', pathMatch: 'full'},\n      {path: '**', redirectTo: 'welcome', pathMatch: 'full'}\n    ]),\n    FormsModule,\n    MatSelectModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n  ],\n  \n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","export interface ICinema {\r\n        id: number;\r\n        department: string;\r\n}\r\n\r\nexport class Cinema{\r\n        department: string;\r\n\r\n        public Cinema(){}\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cinema-proper',\n  templateUrl: './cinema-proper.component.html',\n  styleUrls: ['./cinema-proper.component.css']\n})\nexport class CinemaProperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n    <div class=\"logo\">\n        <img src=\"assets/img/cebulak.png\">\n    </div>\n    \n    <div class=\"titleBar\">\n    <header><h1>Cinema Name</h1></header>\n    </div>\n    \n    <nav class=\"navigationMenu\">\n        <ul>\n            <a>START</a>\n            <a>ELEM2</a>\n            <a>ELEM3</a>\n            <a>ELEM4</a>\n            <a>ELEM5</a>\n            <a>ELEM6</a>\n            </ul>\n    </nav>\n    </body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './cinema.component.html',\n})\nexport class CinemaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-cinema-proper></app-cinema-proper>\n<app-movies></app-movies>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule} from '@angular/router' ;\nimport { HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CinemaComponent } from './cinema/cinema.component';\nimport { MoviesComponent } from './movies/movies.component';\n\nimport { MovieDetailComponent } from './movies/movie-detail.component';\nimport { CinemaProperComponent } from './cinema/cinema-proper.component';\n\n@NgModule({\n  declarations: [\n    CinemaComponent,\n    MoviesComponent,\n    MovieDetailComponent,\n    CinemaProperComponent\n  ],\n  imports: [\n\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path: 'kino', component: CinemaComponent},\n      {path: 'movie/:id', component: MovieDetailComponent},\n    ])\n  ]\n})\nexport class ClientModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IMovie } from '../../movies'\nimport { MovieService } from './movies.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\nexport class MovieDetailComponent implements OnInit {\n  errorMessage: string;\n\n  movie: IMovie;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private movieService: MovieService) { }\n\n   ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');{\n      if(param!=null){ const id =+param;\n      this.getMovie(id);\n      }else console.log('no route id');\n    }\n  }\n\n  getMovie(id: number) {\n    this.movieService.getMovie(id).subscribe({\n      next: movie => this.movie = movie,\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void{\n    this.router.navigate(['/kino']);\n  }\n\n}\n","<app-cinema-proper></app-cinema-proper>\n<div class=\"md-component\">\n    \n    <div class=\"md-box\" *ngIf='movie'>\n        <div class=\"md-detail\">\n            <div class=\"md-de-movie-bar\">\n                <h2>{{movie.title}}</h2>     \n            </div>\n            <div class=\"md-de-genres\">\n                <p>{{movie.movieGenre}}</p>\n            </div>\n            <div class=\"md-de-description\">                \n                <p>decription: {{movie.description}}</p>\n            </div>\n            <div class=\"md-de-reservation\">\n                <button class=\"button\" style=\"direction: rtl; float: right;\">\n                    <i>Make a reservation</i>\n                </button>\n            </div>\n        </div>\n        <div class=\"md-side-panel\">\n            <div class=\"md-sp-rating\">\n                <div>\n                    <div class=\"md-sp-rating-rating\">\n                        <p class=\"md-sp-rating-value\">{{movie.id}}/100</p>\n                    </div>\n                </div>\n                <p class=\"md-sp-rating-head\">user rating</p>\n            </div>\n            <div class=\"md-sp-poster\">\n                <img src=\"assets/img/poster.png\">\n            </div>\n            <div class=\"md-sp-list\">\n                <h4>Direction</h4>\n                    <p>{{movie.director}}</p>\n                <h4>Release date</h4>\n                    <p>#BLANK#</p>\n                <h4>Runtime</h4>\n                    <p>{{movie.length}} min</p>\n                <h4>Rating</h4>\n                    <p>#BLANK#</p>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { IMovie } from '../../movies'\nimport { MovieService } from './movies.service';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: 'movies.component.html',\n  styleUrls: ['./movies.component.css'],\n  providers: [MovieService]\n})\nexport class MoviesComponent implements OnInit {\n  errorMessage: string;\n\n  changeText: boolean;\n  hover:boolean;\n  id:number;\n  constructor(private movieService: MovieService) {\n    this.changeText = false;\n    this.hover = false;\n  }\n\n   movies: IMovie[]=[];\n\n  ngOnInit(): void {\n    this.movieService.getMovies().subscribe({\n      next: movies =>{ \n        this.movies=movies;\n      },\n      error: err =>this.errorMessage = err\n    });\n  }\n\n\n}\n","\n<div class=\"movies-component\">\n    <div class=\"movie-box\" *ngFor='let movie of movies'>\n        <div class=\"box-insides\">\n            <div class=\"movie-poster\">\n                <img src=\"assets/img/poster.png\">\n                <div (mouseover)=\"changeText=true && id=movie.id\" (mouseleave)=\"changeText=false\" class=\"movie-detail\">\n                    <p \n                    class=\"movie-detail-length\" \n                    *ngIf=\"changeText&& movie.id==id\" \n                    [ngStyle]=\"{background: 'white' }\">\n                        {{movie.length}} min\n                    </p>\n                    <hr class=\"movie-detail-line\" *ngIf=\"changeText&& movie.id==id\">\n                    <p \n                    class=\"movie-detail-director\" \n                    *ngIf=\"changeText&& movie.id==id\" \n                    [ngStyle]=\"{background: 'white' }\">\n                        {{movie.director}}\n                    </p>\n                    <p class=\"movie-detail-link-text\" style=\"background-color: unset;\">\n                        <a\n                        (mouseover)=\"hover=true \"\n                        (mouseleave)=\"hover=false\"\n                        *ngIf=\"changeText && movie.id==id\" \n                        [routerLink]=\"['/movie',movie.id]\" \n                        class=\"movie-detail-link-text\" \n                        [ngStyle]=\"{color: hover==true  ? 'white' : 'rgb(169, 169, 169)' }\"\n                        style=\"opacity: 1;\">\n                            <p \n                            class=\"movie-detail-details-message-box\" \n                            style=\"background-color: rgb(73, 35, 8);\">\n                                details...\n                            </p>\n                        </a>\n                    </p>\n                </div>\n            </div>\n            <div>\n                <a class=\"movie-link\" [routerLink]=\"['/movie',movie.id]\">\n                    <h2 class=\"movie-title\">{{movie.title}}</h2>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { IMovie } from '../../movies';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class MovieService {\r\n  private moviesUrl='http://localhost:8080/movie/getAll';\r\n  private movieUrl='http://localhost:8080/movie/get/';\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n    getMovies(): Observable<IMovie[]> {\r\n        return  this.http.get<IMovie[]>(this.moviesUrl)\r\n        .pipe(\r\n            tap(data =>console.log('Wszystko: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)  \r\n            );      \r\n    }\r\n\r\n    getMovie(id: number): Observable<IMovie> {\r\n      return  this.http.get<IMovie>(this.movieUrl+id)\r\n      .pipe(\r\n          tap(data =>console.log('jeden: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)  \r\n          );      \r\n    }\r\n    \r\n    private handleError(err: HttpErrorResponse) {\r\n      let errorMessage = '';\r\n      if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n      } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n      }\r\n      console.error(errorMessage);\r\n      return throwError(errorMessage);\r\n    }\r\n}\r\n\r\n","export interface IMovie {\r\n        id: number;\r\n        movieGenre: string;\r\n        length: string;\r\n        director: string;\r\n        title: string;\r\n        description: string;\r\n        releaseDate: Date;\r\n        others: string;\r\n        posterSrc: string;\r\n}\r\n\r\nexport class Movie{\r\n        movieGenre: string;\r\n        length: string;\r\n        director: string;\r\n        title: string;\r\n        description: string;\r\n        releaseDate: Date;\r\n        others: string;\r\n        posterSrc: string;\r\n\r\n        public Movie(){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.navigate(['/welcome'])\n  }\n\n}\n","<h1>welcome works!!!!!!!!!!!!!</h1>\n\n<a [routerLink]=\"['/kino']\">\n    nazwa kina\n</a>\n<br>\n<a [routerLink]=\"['/admin']\">\n    panel administracyjny\n</a>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}